Multitask Learning and GCN-Based Taxi Demand Prediction for a Traffic Road Network	demand prediction交通需求预测	时空依赖性、动态性和不确定性	"1.建模：GCN（学空间依赖性）+LSTM（学时间依赖性）
Multitask Learning and GCN-Based Taxi Demand Prediction for a Traffic Road Network
tips：
黄色：没看懂
红色：重要
蓝色：需要再思考
绿色：应该有些用，先做个笔记

一、问题意义
1.背景
准确的预测出租车需求
2.挑战
但由于其复杂的时空依赖性、动态性和不确定性，对出租车需求的预测极具挑战。为了充分利用道路交通流的全局和局部的相关性，
二、思路设计
1.算法框架

整个模型可以分为四个模块：数据处理模块、特征提取模块、生成图模块、网络搭建和训练模块。
数据处理模块：
这一部分主要是删除数据中重复和无效的部分，进一步，由于是GPS数据，存在数据偏移的问题，为了修正GPS数据，文章采用基于隐马尔可夫（Hidden Markov）的地图匹配算法，对所有轨迹进行数据匹配。
特征提取模块：
该模块主要从出租车轨迹中提取乘客上、下车的位置，并根据时间段计算各路段的出行时间。从而得到某一时段内各路段出租车发车流和到达流，这一部分数据主要用于构造非直接图。对于每个路段，根据城市路网的拓扑结构提取相邻路段，这一部分数据主要用于构造直接图。
生成图模块：
这一模块主要是借助上一模块得到的数据，生成网络所需的输入数据。在生成图的过程中，生成了四种图，分别是：出发和到达的全局关系图和局部关系图。具体构建方法如下：
1、根据路段之间的连通性（物理连接），生成局部关系图的邻接矩阵。
2、通过计算不同路段的出发/到达流序列相似性，得到全局关系图的邻接矩阵。
出发和到达的局部关系图其实是一致的，而全局关系图是不同的
网络搭建和训练模块：
最后一部分是基于GCN和LSTM网络预测出发流量，并结合多任务学习策略对模型进行训练。在多任务学习中，以出租车出发流预测作为主要任务，出租车到达流预测作为相关任务，有助于提高预测精度。
网络的基本框架如下图所示：

整个网络也可以分为三个模块：局部和全局空间特征提取模块、时间特征提取模块、特征融合模块。接下来细说这三个模块的功能和原理。
1.局部和全局空间特征提取模块
在该模块中，将路段设置为图的节点，每个节点的特征包括该节点对应路段产生的历史到达流序列。设路段总数为R，历史时段数为K，则图的特征矩阵为X，其维度为K * R，相邻矩阵为A，其维度为R * R（对于直接图，邻接矩阵就代表其物理连接；而对于非直接图，其邻接矩阵是由路段之间的相似度构成的矩阵，相似度是通过Fast-DTW算法计算获得）。
该模块由两层GCN+GLU组成。

其中GCN层的行为如下：

GCN+GLU+BN层的行为如下：

其中ReLu采用的是Leaky ReLu，最终的输出结果是一个KR的矩阵。
2.时间特征提取模块
该模块的输入为上一模块的输出，即一个K * R的矩阵，进入一个LSTM网络获取其时间特征。LSTM的具体结构图如下所示


最终LSTM模块的输出结果是一个维度为1 * R的矩阵（其中R表示路段数）
其中，xt表示输入（此处为一个K * R的矩阵），W和U表示权重，b是偏置项，it、ft、ot分别表示输入门、遗忘门、输出门对应的输出项。
参数更新方法如下：

最终LSTM模块的输出结果是一个维度为1 * R的矩阵（其中R表示路段数
3.特征融合模块
通过不同的输入，可以获取两种变量，一种是局部路段关系图，另一种是全局路段关系图，这两种变量的维度均为1R。将这两种变量进行拼接，得到一个2R的矩阵，输入到二维卷积网络中（kernel_size=21，stride=1, padding parameter was set to VALID），输出一个1 * R的矩阵，即每个路段下一个时间步的预测结果。

由于是多任务学习，损失函数为加权求和的形式，
上车客流的损失函数

下车客流的损失函数：

总损失函数

4.算法介绍
本文提出了一种基于图卷积网络、长短时记忆(LSTM)和多任务学习的深度学习模型。
考虑道路网络中出租车出行的空间格局分布，建立无向图模型；
然后，利用LSTM提取交通流的时间特征；
最后，采用多任务学习策略对模型进行训练，以提高模型的可泛化性。
能够有效地预测交通网络层面的短期出租车需求
2.1优势
2.2贡献&创新
1、提出了一种基于图卷积网络（Graph Convolutional Networks）预测出租车出发、到达流的模型。同时，为了实现道路水平预测，在构建交通流图时，不是将城市空间划分为网格，而是采用路段作为节点，出租车需求作为节点的特征。
2、基于路段的局部相关性和全局相关性构建了两种类型的交通流图。这些图被称为直接图（direct graph）和间接图（indirect graph）。直接图基于路网拓扑构造，该图综合路段间的局部连通性和空间相关性。而间接图通过考虑交通网络中所有路段之间的全局相关性，从而判断不同路段间是否连通。
3、将出发流预测任务和到达流预测任务相结合，采用多任务学习策略加快学习过程，避免过拟合，得到更一般化的结果。
2.3问题定义
5.算法说明
这两条路段间存在相似性。接着进行了相似度的计算，如下图所示。

通过上图可以进一步证明路段间是存在相似性的，证明文章的可行性
三、实验设计及研究结果

数据集
实验所用的数据集是来自西安的真实出租车轨迹。这些轨迹来自1万多辆出租车，覆盖了2万个路段。在每辆出租车中，GPS设备记录了车辆ID、时间戳、经纬度、车速和行驶方向，以及车辆的国家代码。

文章选取了每周7天的数据，前六天的数据作为训练集，第七天的数据作为测试集，此外，文章选择了出发流量大于15次/天的路段，共851个路段。在现有研究中，对于发车流量较小的路段，如15个/天，不作为主干道路段，而是作为一些分支路段的代表，如与主干道相连的一个小分支。这些路段对流量预测的影响很小，在大多数研究中往往被忽略。同样的，这些影响在本研究中也没有考虑。此外，文章将每天划分为288个时间段，每个时间段为5分钟。


指标
文章采用了RMSE、MAE作为评价指标。

Baseline
实验结果
模型训练过程中的损失函数曲线如下图所示（左图表示在训练集上的结果，右图表示在测试集上的结果）

四、不足与改进
五、相关工作
六、代码
GitHub - WfcCross/GNN4Traffic: This is the repository for the collection of Graph Neural Network for Traffic Forecasting.

2.图结构：直接图+间接图"	"1.节点：路段
2.边：每个节点的特征包括该节点对应路段产生的历史到达流序列
3.图：路段总数为R，历史时段数为K，则图的特征矩阵为X，其维度为K * R，相邻矩阵为A，其维度为R * R（对于直接图，邻接矩阵就代表其物理连接；而对于非直接图，其邻接矩阵是由路段之间的相似度构成的矩阵（相似度是通过Fast-DTW算法计算获得"	局部和全局空间特征提取模块（GCN+GLU）、时间特征提取模块（LSTM）、特征融合模块（拼接两种图得到的结果，共同计算loss）	"辅助任务：
以出租车出发流预测作为主要任务，出租车到达流预测作为相关任务，"
Flow Prediction in Spatio-Temporal Networks Based on Multitask Deep Learning	Traffic State Prediction交通状态预测（预测时空网络中的节点流和边缘流）	"1、空间依赖性：不同地点之间的空间相关性
2、时间依赖性：不同时间间隔之间的时间相关性
3、外部因素：(如事件和天气)。
4、节点处的流(称为node flow)和节点之间的过渡(边缘流edge flow)相互影响。"	"1.建模：三个stream全卷积网络(3s-FCN)
2.图结构：
3."	"1.节点：区域作为网格（node level）
2.边：节点之间的直接流量作为边权重（有向）。（edge level）
3.图：
4.邻接矩阵(边）：动态流邻接矩阵，称为A_ij其条目表示从节点r_i到节点r_j的有向流量"
1.在全卷积网络的基础上，本文设计了两个复杂的模型（NODENET和EDGENET），分别用于预测节点流和边缘流。NODENET和EDGENET都由三个stream全卷积网络(3S-FCNs)组成，包括closeness-stream, period-stream和trend-stream，用于捕获3种不同的时间相关特征，FCN全卷积层同时也会捕获近距离和远距离的空间相关性。这两个模型通过耦合其中间层的潜在表示连接起来，并一起进行训练。另外，这两种flow预测也会通过正则化后用在Loss计算。
2.外部因素（external factor）也通过门控融合机制整合到框架中。
3.在边缘流预测模型EDGENET中，本文采用嵌入组件（embedding compnent）来将稀疏(高维)输入编码为一个潜在的低维表示，处理节点间的稀疏过渡。"	正则化
MDTP: A Multi-source Deep Trafic Prediction Framework over Spatio-Temporal Trajectory Data
一、问题意义
1.背景
现有的基于神经网络的方法往往忽略位于同一时空交通区域的多种类型移动物体之间的相关性，这对于交通预测分析来说不是最佳的。
我们的目标是预测未来时间的所有观察区域的交通量。

2.挑战
将深度学习模型应用于流量预测时存在三个挑战，如下所述：
挑战一：多源数据影响。不同类型的移动物体在相同/相似的时空交通区域中移动时，可能具有时空相关性。
现有的深度交通预测方法仅考虑单一类型的轨迹数据，并且每次只能预测一种类型的交通量。
举例：
首先将整个城市划分为 11*11 不相交的空间区域，然后统计每个区域中出租车和自行车的数量。
空间分布相关性：最后，我们以热图的形式绘制结果。图3显示了纽约市的出租车分布图和自行车分布图。很明显，它们的空间分布相似，这意味着它们潜在的相关性。

时间分布相关性：我们选择一天/一周，并将整个时间跨度分成相等的时间段，其中每个时间段代表一天的四个小时或一周的一天。接下来，我们计算每个时段的出租车和自行车的数量。如图7所示，出租车和自行车在一天/一周内有相似的移动趋势，这也表明了它们的时间依赖性。


挑战二：动态空间依赖性。
尽管现有的深度流量预测研究使用卷积神经网络（CNN）和图卷积网络（GCN）来捕获空间依赖性，但存在两个局限性。
一方面，基于 CNN 的架构逐步捕获邻居空间交通依赖性，但无法直接捕获长期空间依赖性。
另一方面，虽然最流行的基于 GCN 的方法可以学习交通网络的更多隐藏特征，与 CNN 相比，它们在捕获动态空间交通依赖性方面效率较低。动态空间依赖性意味着两个静态位置之间的关系可能在不同的时间戳下发生变化。
例如，早晚高峰时段住宅区和商业区之间的空间联系比其他时间段的相关性更强。基于GCN的交通预测模型由节点和边两个核心概念组成，其中节点表示道路交叉口[6]或区域[35]，而边表示节点之间的关系。
现有的基于 GCN 的方法倾向于分配具有统计属性的边（例如道路距离 [30] 和附加上下文 [21]），这导致模型学习交通网络的静态空间依赖性。为了解决这个挑战，我们用动态流量表示 GCN 模型的边。因此，我们的深度交通预测模型可以明确地模拟交通网络的动态空间相关性。
挑战三：深度流量预测演示。
现有的深度流量预测方法主要侧重于提高各种流量预测任务的效率和有效性。然而，很少有工作关注流量预测分析的可视化和演示，这使得开发人员和用户很难查看并将其应用于实际应用场景。为了应对这一挑战，我们基于我们提出的深度流量预测框架进一步开发了一个用户友好的交互系统

二、思路设计
提出了一种基于时空轨迹数据的多源深度流量预测框架，称为MDTP。
1.算法框架
该框架包括两个阶段：时空特征建模和多源桥接。
在特征建模阶段，提出了一种与长短期记忆网络（LSTM）相结合的增强图卷积网络（GCN）模型，以捕获流量的空间依赖性和时间动态。
在多源桥接阶段，我们提出了两种方法：Sum 和 Concat，来连接来自不同轨迹数据源的学习特征。发现多源轨迹数据之间的相互关系，以提高流量预测性能。

2.算法介绍
2.1优势：
i)具有卓越的效率；
ii)与单源流量预测方法相比，性能显着提高；
iii)即使对数千万条轨迹数据也能在几秒钟内执行交通预测。我们开发了MDTP+，一个用户友好的交互系统来演示流量预测分析。
2.2贡献
• 多源深度流量预测。我们首次提出了一种基于多源轨迹数据的深度交通预测框架MDTP，该框架利用了不同类型移动物体之间的时空相关性。
• 动态交通网络建模。我们提出了一种有效的动态交通网络建模方法来捕获空间和时间依赖性。具体来说，我们引入了带有交通流的增强型 GCN 模型，以学习动态交通网络的空间依赖性。然后，我们使用 LSTM 模型来捕获交通状态时间序列中的动态和长期时间关系。
• 可视化演示。我们基于 MDTP 框架开发了一个名为 MDTP+ 的新跨平台系统
• 广泛的实验。我们对两个大规模真实轨迹数据集进行了广泛的实验评估。结果表明，与 6 个流行的基线相比，我们提出的 MDTP 可以实现最佳的预测性能。此外，MDTP 还提供卓越的可扩展性和效率，即使对数千万条轨迹数据也能在几秒钟内做出预测。
2.3问题定义
交通图结构
定义 3.1（节点）
为了使用图拓扑对交通进行建模，我们根据经度和纬度将整个城市空间划分为网格地图，表示为。每个区域代表一个空间节点。
总共有节点（即区域）。如图2所示，地图中存在四个区域，我们将每个区域建模为一个节点，它与两种类型的流量相关联，即in volume和out volume。

定义 3.2（in/out volume）
给定一组轨迹P和离散时间间隔T，对于位于网格图中的行和列的节点，它在时间间隔T中与两种类型的流量相关联，分别定义为：

和 分别表示区域在时间间隔T内的流入量和流出量。是P中的一条轨迹，它由形式的按时间排序的GPS点组成，其中是地理位置，表示时间戳。  和分别表示的GPS起点和终点。另外，|·|表示集合的基数。
例如，在图2中，对于时间间隔的每个节点/区域，我们可以根据定义3.2计算其出租车和自行车的流量以及出租车和自行车的出流量。对于处的四个节点，自行车的进出流量为 (1, 2, 2, 1) 和 (3, 0, 1, 2 ） 分别;出租车进出量分别为(1,1,1,2)和(1,3,0,1)。

定义 3.3（edge）
给定轨迹集 P 和时间间隔T ，边在时间间隔期间连接节点和，表示从 到处的有向流量。

其中和分别是的起始节点和结束节点。
请注意，公式 3 定义了边权重。与以往的研究简单地采用节点之间的空间距离作为边权重不同，我们利用节点之间的直接体积流量作为边权重。因此，边缘是动态的，因为从 到的体积流量在不同的时间间隔内变化。

基于节点和边，城市交通可以用表示，其中表示节点的集合，表示所有节点对之间有向边的集合。请注意，G 是一个动态图，因为每个节点的进/出流量以及节点之间的流量（即边）在不同时间会有所不同。

特定图捕获时间间隔T期间时空流量的拓扑状态。从导出的输入（特征）矩阵表示为∈，其中表示时间间隔 T 节点 的M维多源交通流下的特征（即，进出流量）。例如，= 2 表示使用两个流量源（即自行车和出租车流量）进行流量预测。由导出的邻接矩阵 表示时间间隔T 内节点之间的边信息，其中表示从节点到节点的有向边。

定义 3.4（多源深度流量预测）
给定一组  从当前时间间隔 T 开始过去 S 个时间间隔的历史流量图，其对应的特征矩阵集合为，邻接矩阵集合为。请注意，，其中是交通流源的数量。多源深度流量预测是学习一个神经网络函数来预测下一个时间T+1期间的流量状。

3.算法说明
3.1概述
在第一阶段，构建两个网络（一个用于自行车，一个用于出租车）来捕获两类移动物体在每个时间间隔内的动态空间和时间特征。这是因为，如定义 3.4 中所定义，为了训练神经网络进行预测，需要一组过去S时间间隔内的流量图。在第二阶段，将从自行车和出租车中学到的 ST 特征合并起来，以捕获它们之间的相关性。接下来，我们分别详细介绍两个处理阶段。
3.2时空特征建模
在ST特征建模阶段，过去的时间间隔S内的流量图首先顺序输入到我们的GCN模型中以捕获空间依赖性，然后输入到LSTM网络中以学习长期时间关系交通网络。

空间依赖性。正如第 3 节中所讨论的，流量图捕获时间间隔T期间动态流量的拓扑状态。对于每个，我们可以得到一个输入特征矩阵来表示所有节点的特征，以及一个对应的权重矩阵，也称为邻接矩阵，表示节点之间的边。在MDTP中，是动态流邻接矩阵，称为，其条目表示定义3.3中从节点ri到节点rj的有向流量。因此，我们定义新的增强图卷积层（enhanced graph convolution）如下：

时间依赖性。我们直接利用 LSTM 网络来捕获动态流量不断变化的时间关系，因为 LSTM 可以学习顺序流量数据的长期依赖性[23]。具体来说，在使用上述 GCN 层提取流量图的空间依赖性后，我们可以获得一系列学习到的流量状态。然后，我们将每个 按顺序输入到 LSTM 层。换句话说，是GCN层的输出和LSTM层的输入。通过这些，LSTM 模型可以对动态交通网络的长期依赖性进行建模。
标准 LSTM 可以描述为具有多个乘法门单元的封装单元。对于一定的时间间隔 T，LSTM 单元将当前输入向量和上一个时间步的状态向量作为输入，并输出当前时间步的状态向量。具体来说，，其中和。此外，。这里，分别表示输入门、遗忘门、输出门和记忆单元。 是相应单元的参数。

是 sigmoid 激活函数，⊙ 表示逐元素乘法。
在 MDTP 中， 是学习到的流量表示 ，对应于原始流量图 。最终，我们将最后一个隐藏状态作为后续处理的预测结果。
3.3多源桥接
考虑到多种类型移动物体之间的相关性，应合并第一个特征建模阶段从多源（例如出租车和自行车）捕获的 ST 特征，以更好地表示交通网络。如图5所示，基于自行车网络和出租车网络的两个潜在表示，即和，在多源桥接网络中连接。
具体来说，桥接管道（bridging pipeline）首先将两个潜在表示馈送到桥接组件（bridge component，即 Bridge）中，并开发一个全连接层（即 FC）。
然后，它将潜在表示和前一个 FC 层的输出一起输入到桥接组件中，
最后开发另一个 FC 层以获得最终的预测结果。
这种桥接管道能够同时捕获多个移动对象的 ST 特征以及它们之间的关系。因此，经实验验证，MDTP能够获得更准确的流量预测结果。接下来，我们详细介绍桥组件中使用的两种连接方法[33]。
sum connect 方法直接对两个潜在表示（即和）求和，因为它们具有相同的维度。


其中D表示两个潜在表示的维度和，且 。

Concat connect。两个潜在表示和的串联定义如下。

 其中和 分别表示和的的维数，并且。

模型可扩展性（scalability）。
在本文中，我们使用自行车和出租车流作为说明，因为它们广泛应用于道路网络和先前的研究[8,19,21,26,32,33]。然而，集成其他流量（例如步行流）很简单，因为 MDTP 灵活且可扩展，可以支持多个轨迹流。在 MDTP 的第一阶段，有多个网络，每个网络都能够捕获每种类型的交通流（例如自行车流、出租车流或其他交通流）的时空特征。在MDTP的第二阶段，设计了两种桥接方法来合并多种类型移动对象（例如本文中的自行车和出租车）之间的时空相关性，以提高预测性能。请注意，这两种桥接方法可以支持多个流量流，因为它们是矩阵运算，对流类别的数量没有任何限制。
3.3整体损失函数
的损失函数，它考虑了不同类型移动物体的每个节点的进出量。

其中表示节点的预测入流量，表示节点的预测出流量。这里，代表不同的移动物体（例如出租车或自行车），表示预测的实际值（即地面实况）。我们方法的详细训练过程如算法 1 所示。


三、实验设计及研究结果
数据集
我们使用来自纽约 (NYC) 和芝加哥 (CHI) 的两个真实数据集验证 MDTP。每个数据集包含自行车和出租车流量，即 NYC-Taxi、NYC-Bike、CHI-Taxi 和 CHI-Bike。
• NYC-Taxi。该数据集包含 2016 年（从 01/01/2016 到 06/30/2016）纽约市的 53,901,033 条出行记录。
• NYC-Bike。该数据集包含 2016 年（从 01/01/2016 到 06/30/2016）纽约市的 5,675,719 条出行记录。
• CHI- Taxi。该数据集包含2016年（从03/01/2016到04/30/2016）CHI的956,972条出行记录。
• CHI- Bike。该数据集包含2016年（从03/01/2016到04/30/2016）CHI的336,075条出行记录。
我们将 NYC 分为 3 个子数据集进行时间范围评估，即 1和2月的子数据集包含 17,411,420 次出租车出行和 1,070,345 次自行车出行，3和 4月的子数据集包含 18,760,664 次出租车出行和自行车出行 1,933,028 次，5和 6月的子数据集包含 17,728,949 出租车出行和 2,672,346 自行车出行。请注意，5和6月的最后一个子数据集是默认数据集。
每趟行程包括：pick-up时间/地点、drop-off时间/地点。顺便说一句，获得满意的多源交通预测数据集需要包含多个交通流，并且要求这些交通流在空间和时间维度上都有重叠。
指标

MAE、RMSE、MAPE，越接近0，意味着预测精度越高。
超参数
在实验中，我们根据验证数据的性能设置MDTP的超参数。在空间网络中，默认初始化GCN参数，输出特征大小为128。在时间网络中，我们将窗口大小设置为24来采样数据，这也是LSTM的长度。

LSTM的层数为2，LSTM的隐藏大小为256。

我们直接采用Adam优化器[7]进行训练。批量大小设置为 32，梯度阈值设置为 5，dropout 设置为 0.5。初始学习率为0.001，每50个epoch减少10倍。此外，我们还实行提前终止机制。具体来说，当默认验证集的损失性能连续 20 个 epoch 不下降时，训练终止。
Baseline
我们将 MDTP 与现有广泛使用的时间序列方法（即 HA 和 ARIMA）、流行的机器学习方法（即 XGBoost）以及最先进的基于神经网络的方法（即 ST-ResNet 和 STDN）进行比较。具体来说，比较的基线是：（i）HA[9]，一种经典方法，利用历史时间段内流量数据的平均值来预测某个区域的进出量； (ii) ARIMA [15]，一种经典的时间序列模型，结合 AR（自回归）和 MA（移动平均）进行时空数据预测分析； (iii) XGBoost [3]，一种用于预测研究中树增强的可扩展机器学习算法； (iv) ConvL [17]，一种基于神经网络的结合卷积网络和 LSTM 模型来捕获空间和时间特征以进行流量预测的方法； (v) ST [32]，一种基于 CNN 的预测模型，为人群流量预测提供最先进的结果； (vi) STDN [26]，一种时空动态网络，利用位置之间的动态相似性和转移注意力机制。请注意，STDN 在流量预测方面拥有最先进的结果。对于左侧基线，NYC 数据集上的预测结果直接在其原始论文中获得。
预处理
对于空间粒度，根据研究[26]，考虑到交通流的空间分布和城市边界，我们将 NYC 和 CHI 分为 11 × 21 的区域（即节点）。
对于时间方面，我们将时间间隔设置为一小时来分割数据集的时间跨度，这在文献[34]中常用。具体来说，我们根据过去 24 小时的流量来预测每小时的流量。但值得一提的是，MDTP可以根据具体应用确定灵活的时空分区策略。
然后，我们计算每个区域的进出volumes以及每对区域之间的volume流量，并使用最小-最大归一化对volume和流量进行归一化。因此，对最终的预测结果进行反规范化，并使用反规范化值进行预测性能评估。
在模型测试过程中，我们过滤了流量小于10的数据，以保持与基线相同的设置。
这也是学术和工业研究中的常见做法。
最后，对于每个数据集，我们使用 70% 作为训练集，10% 作为验证集，20% 作为测试集

实验结果

四、不足与改进
五、相关工作

相关工作在本节中，我们回顾相关的流量预测工作，包括传统方法和深度学习模型。

2.1 传统预测方法 在早期的交通预测研究中，已经提出了多种方法[25]，包括时间序列和传统的机器学习方法。对于时间序列方法，研究人员将流量预测视为时间序列预测问题。因此，经典的自回归积分移动平均（ARIMA）模型与卡尔曼滤波相结合[9, 15]已被广泛用于交通预测。然而，这些时间序列方法基于假设流量静止的线性模型。因此，他们无法对时间维度上复杂的非线性关系进行建模。此外，他们忽略了交通网络的空间依赖性。

为了从交通网络中捕获时空相关性，采用机器学习模型来进行灵活的数据驱动的交通预测。传统的机器学习方法包括支持向量回归[10]、最近邻[29]、贝叶斯网络[37]和概率模型[1]。然而，这些方法对简单和小规模的交通数据实现了较高的预测精度，因此无法有效地挖掘海量交通数据中深层和隐含的时空相关性。

2.2 深度学习预测模型 受深度学习在许多应用场景中成功的启发，基于深度学习的方法正在成为流量预测中最流行的方法[20]。许多研究人员将深度学习模型应用于流量预测，例如基于 CNN、RNN 和基于混合模型的模型。基于 CNN 的方法 [12, 13] 将城市交通建模为由不相交的相等网格组成的图像，其中每个网格都对其空间交通特征进行建模。他们使用卷积神经网络（CNN）来捕获交通网络的空间依赖性。基于 RNN 的方法 [4, 14] 利用循环神经网络 (RNN) 来提取交通状态的时间相关性。然而，基于 CNN 和基于 RNN 的方法分别对流量的空间和时间依赖性进行建模。为此，开发了基于混合的方法。 Wu等人[23]提出了一种CNN-RNN模型，共同捕获交通网络的时空特征。由于流量还受到外部因素（例如天气和活动）的影响，Yao等人[27]集成了CNN、LSTM和语义嵌入来提高预测性能。最近，Zhang等人[33]提出了一种新的基于CNN的多任务深度学习框架，可以同时预测节点流和边缘流。 Yao等人[26]结合CNN和多个LSTM来捕获动态流量网络的长期周期依赖性。尽管如此，上述方法只能逐步捕获相邻空间依赖性，而无法直接捕获大交通网络中的长期空间依赖性。

最近，最先进的图卷积网络（GCN）被用来开发城市交通中的图结构信息[22, 28]，例如道路网络和区域网络。具体来说，GCN 构建块以通过预定义的节点和边来学习图结构数据。基于此，GCN 能够通过边聚合来自邻居节点的特征信息来提取节点的高级特征。受此启发，现有的基于 GCN 的交通预测方法通常将城市交通建模为交通图，其中节点表示交通对象（例如传感器或道路交叉口），边表示节点之间的关系。

因此，可以通过 GCN 模型捕获节点特征（即流量）。然而，现有的基于GCN的方法大多为边缘分配静态权重，例如道路距离或静态信息，无法处理动态交通网络。

为此，我们提出了一种增强的 GCN 模型来捕获动态城市交通的时间和空间依赖性，其中节点表示区域体积，边缘表示区域流量。

需要注意的是，上述所有深度交通预测方法都是基于单一类型的轨迹数据对交通网络进行建模，而忽略了相同时空条件下多种类型移动物体之间的相关性。相比之下，我们提出的 MDTP 方法通过捕获多源轨迹之间的隐藏相关性来处理复杂的动态流量预测。


六、代码

	Traffic State Prediction交通状态预测	
"1.多源数据（出租车和自行车）（GPS轨迹）的时空依赖性
2.空间依赖性（动态）"	"1.建模：GCN+LSTM
2.图结构：直接图+间接图
"	"1.节点：区域作为网格
2.边：利用节点之间的直接流量作为边权重。边在不同时间片是动态的。
3.图：动态图
4.邻接矩阵(边）：动态流邻接矩阵，称为A_ij其条目表示从节点r_i到节点r_j的有向流量"		"多源桥接（bridge）：Sum 和 Concat。
1.通过时空特征提取模块，获取潜在特征。
2.桥接管道（bridging pipeline）首先将两个潜在表示馈送到桥接组件（bridge component，即 Bridge）中，并开发一个全连接层（即 FC）。
3.然后，它将潜在表示和前一个 FC 层的输出一起输入到桥接组件中，一起训练
4.最后开发另一个 FC 层以获得最终的预测结果"		
利用均值、方差对同一时间窗口的数据进行归一化和反归一化	RevIN - Reversible Instance Normalization for Accurate Time-Series Forecasting Against Distribution Shift		"1. 时间序列预测中的主要挑战之一是数据分布漂移问题（distribution shift problem），即数据分布，比如数据的均值方差等，会随着时间而变化，这会给时序预测问题造成一定的难度（这类数据也成为非平稳数据non-stationary）。而在时序预测任务中，训练集和测试集往往是时间来划分的，这天然会引入训练集和测试集分布不一致的问题，此外，不同输入序列也会有数据分布不一致的问题。这两个不一致的问题都可能会导致模型效果的下降。
2.为了解决上述问题，可以想办法去除数据中的非平稳信息，但是如果只是简单的消除非平稳信息，会导致非平稳信息丢失，这可能会影响到模型无法学习到这部分信息，进而影响到模型效果。
"	"RevIN包含两部分，规范化和逆规范化:
1.首先在数据输入模型前，将数据进行归一化，
2.然后经过模型学习后得到模型输出，
3.最后对模型输出进行反规范化。
RevIN是一种灵活的，端到端的可训练层，能够被应用到任意模型层
"	上图描述了一个基本的work flow：输入一个向量x，即它实际上可以看作一个多变量，每一个维度可以看作一个单变量。x通过RevIN，将b-1的分布转换到b-2，可以看到它的均值发生了改变，每一个单变量都针对均值做了归一化，这样原始分布中不同单变量之间的分布差异被人为的减少。将变换分布后的x_hat当作输入给网络，输出y_tilde，这些y_tilde具有b-3的分布，但也许不符合真实的分布。所以a-1的RevIN中间有一些参数，其中代表均值和方差就不提了，β是进行归一化的参数，γ是进行仿射变换的可学习参数。通过这些参数，b-3通过RevIN做一次reversing，回归近似真实的分布b-4。
预训练+RNN	AdaRNN: Adaptive Learning and Forecasting for Time Series		"1.时序数据的非稳定性（时间协变量移位 TCS）使得数据分布时刻变化。数据分布P(x)在不同时间区间是变化的，而条件分布P(y|x)在某一场景下是固定的
2.因为本案例分布改变的问题违背了上述模型的独立同分布的准则，使得上述模型的效果和泛化性都很差
"	"1.时域分布特征化(TDC): 目的是更好地描述时间序列中的分布信息。根据最大熵原理（最大可能提高总分布的熵），将训练数据分解为𝐾个分布差距大的最不同时段。
2.时域分布匹配(TDM)：TDM模块的设计是通过匹配不同时期的分布来学习不同时期所共有的知识，旨在减少时间序列中的分布不匹配，学习一种基于RNN的自适应时间序列预测模型。主要是基于RNNs去动态减小分布散度。（首先使用所有时段的全标记数据对网络参数𝜃进行预训练，即使用(2)。这是为了学习更好的隐藏状态表示，以便于𝜶的学习）（使用boosting学习隐藏层的重要性，即学习𝜶）
时序预测的方法包括：隐式马尔科夫，动态贝叶斯网络，卡尔曼滤波器，循环神经网络
"	"对于训练数据，AdaRNN首先利用TDC将其划分为充分表征其分布信息的时间段。然后利用TDM模块进行周期间的分布匹配，建立广义预测模型M，用新数据的r步预测。
AdaRNN的基本原理如下。在TDC中，模型M被期望在最坏的分布情况下工作，在这种情况下，不同时期之间的分布差距很大，因此可以通过最大化它们的差异来确定最优的时间段分割。在TDM中，M利用学习到的时间段的共同知识，通过RNNs与正则化项匹配它们的分布，从而做出精确的未来预测
"
（ADARNN基础上）	DISERSIFY：OUT-OF-DISTRIBUTION REPRESENTATION LEARNING FOR TIME SERIES CLASSIFICATION	2023	有别于传统假设认为数据分布是给定的一个静态分布，我们认为真实生活中的数据应该是动态变化的。针对分布动态变化的数据集而言，其复杂性可能归因于存在未知的潜在分布	"DIVERSIFY的核心是表征潜在分布，然后最小化两两之间的分布差异（由一个最小-最大对抗游戏构成:
一方面，它通过最大化潜在分布差异性将时间序列数据分割成几个潜在的子域以保持多样性，即“最坏情况”分布场景；
另一方面，它通过减少获得的潜在域之间的分布差异来学习域不变表示。这种潜在分布广泛存在于时间序列中）。
1.预处理:该步骤采用滑动窗口将整个训练数据集分割成固定大小的窗口，我们认为来自一个窗口的数据构成最小的数据单元。
2.细粒度特征更新:这一步使用建议的伪域类标签作为监督来更新特征提取器。
3.潜在分布表示:这一步旨在识别每个实例的域标签以获得潜在分布信息。它最大化不同的潜在分布的差异性以扩大多样性。
4.域不变表示学习:这一步利用上一步中的伪域标签来学习域不变表示，并获取泛化模型
"	
物理驱动+数据驱动：交通流势能场（STDEN）+PGFM（物理引导流模型）	STDEN: Towards Physics-Guided Neural Networks for Traffic Flow Prediction			我们使用基于物理的连续性方程来对 PEF 和交通流之间的转换进行建模	
动态时空依赖+多源时空序列	MDTP: A Multi-source Deep Trafic Prediction Framework over Spatio-Temporal Trajectory Data	2021	"1、多源数据影响。不同类型的移动物体在相同/相似的时空交通区域中移动时，可能具有时空相关性。现有的深度交通预测方法仅考虑单一类型的轨迹数据，并且每次只能预测一种类型的交通量
2、动态空间依赖性。
尽管现有的深度流量预测中，基于 CNN 的架构逐步捕获邻居空间交通依赖性，但无法直接捕获长期空间依赖性。基于 GCN 的方法可以学习交通网络的更多隐藏特征，与 CNN 相比，它们在捕获动态空间交通依赖性方面效率较低。（动态空间依赖性意味着两个静态位置之间的关系可能在不同的时间戳下发生变化。现有的基于 GCN 的方法倾向于分配具有统计属性的边（例如道路距离和附加上下文 ），这导致模型学习交通网络的静态空间依赖性。本文使用动态，边权重由不同时期的流量表示。）
"	在第一阶段，构建两个网络（一个用于自行车，一个用于出租车）来捕获两类移动物体在每个时间间隔内的动态空间和时间特征。这是因为，为了训练神经网络进行预测，需要一组过去S时间间隔内的流量图（24h）。在第二阶段，将从自行车和出租车中学到的 ST 特征合并起来，以捕获它们之间的相关性。	"该框架包括两个阶段：时空特征建模和多源桥接。
 在特征建模阶段，提出了一种与长短期记忆网络（LSTM）相结合的增强图卷积网络（GCN）模型，以捕获流量的空间依赖性和时间动态。
 在多源桥接阶段，我们提出了两种方法：Sum 和 Concat，来连接来自不同轨迹数据源的学习特征。发现多源轨迹数据之间的相互关系，以提高流量预测性能。
"
多任务学习+约束（通过约束分解特征，更准确学习task的共性和特性）	Feature Decomposition for Reducing Negative Transfer: A Novel Multi-task Learning Method for Recommender System		特征冗余和负迁移现象：通过对PLE模型的使用发现，各个参与多任务学习的专家网络角色，由于没有受到很好的约束，因此其表征出来的特征分布会出现特征放置位置错误的现象，即任务A的特征信息中存在任务B特有特征或者任务间可共享的特征，共享特征信息和任务B的特征信息同样亦如此，如图1-(a)所示，这种现象，被称为“特征冗余”现象。由于“特征冗余”现象的存在，从而导致多任务学习负迁移问题的产生。因此，“特征冗余”现象被认为是多任务学习中负迁移问题的根本原因所在。	"FDN模型的关键部分包括特征分解对模块和三个约束条件（正交约束、辅助任务约束和特征共享约束）
1、特征分解对（DCP）模块来分别捕获任务共享特征信息和任务特有特征信息，本质上包含了两个专家网络，一个负责抽取任务间可共享信息，一个负责抽取任务特有特征信息。
2、显式的约束将特征进行分解以解决“特征冗余”现象：正交约束（参考cv生成对抗来构建约束，使其能够尽可能将两个专家表达的信息表征相关性降低）和辅助任务约束（为任务特有专家网络的表征输出上加上了一个多层感知机，感知机输出为一个当前任务的预估结果，将该预估结果与ground truth之间构建一个交叉熵损失约束，作为此处的辅助任务约束）和特征共享约束（利用特征融合模块，串联两部分）"	FDN模型的关键部分包括特征分解对模块和三个约束条件（正交约束、辅助任务约束和特征共享约束）
	"Environment Agnostic Invariant Risk Minimization
for Classification of Sequential Datasets"				
	Woods——Benchmarks for out-of-distribution generalization in time series tasks				
